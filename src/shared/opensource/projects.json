{
  "data": [
    {
      "id": "norwegian_pronunciation_coach_12",
      "name": "Norwegian Pronunciation Coach",
      "createdAt": "2025-07-07T00:00:00Z",
      "url": "https://github.com/SushantSriv/norwegian-pronunciation-app",
      "description": "Light-weight, Dockerised web app that lets learners record themselves, get instant Whisper-based feedback on Norwegian pronunciation, and level-up sentence by sentence. Built because, while learning Norwegian, I found pronunciation especially challenging and existing apps offered no phrase-level, real-time feedback—so I created this tool for myself and other international learners. React + Vite frontend with framer-motion animations; FastAPI backend running a local Whisper-medium ASR model and an IPA-hint pipeline.",
      "isFork": false,
      "languages": [
        {
          "name": "Python 3.10",
          "iconifyClass": "logos:python",
          "color": "#3776AB"
        },
        {
          "name": "FastAPI",
          "iconifyClass": "simple-icons:fastapi",
          "color": "#009688"
        },
        {
          "name": "React",
          "iconifyClass": "simple-icons:react",
          "color": "#61DAFB"
        },
        {
          "name": "TypeScript",
          "iconifyClass": "simple-icons:typescript",
          "color": "#3178C6"
        },
        {
          "name": "Vite",
          "iconifyClass": "simple-icons:vite",
          "color": "#646CFF"
        },
        {
          "name": "Framer Motion",
          "iconifyClass": "simple-icons:framermotion",
          "color": "#0055FF"
        },
        {
          "name": "PyTorch",
          "iconifyClass": "simple-icons:pytorch",
          "color": "#EE4C2C"
        },
        {
          "name": "OpenAI",
          "iconifyClass": "simple-icons:openai",
          "color": "#412991"
        },
        {
          "name": "FFmpeg",
          "iconifyClass": "simple-icons:ffmpeg",
          "color": "#007808"
        },
        {
          "name": "Docker",
          "iconifyClass": "simple-icons:docker",
          "color": "#2496ED"
        }
      ],
      "dataSources": [],
      "demoUrl": "",
      "technologies": [
        "openai-whisper",
        "jiwer",
        "phonemizer",
        "pydub",
        "uvicorn",
        "fastapi-cors-middleware",
        "espeak-ng",
        "react-hook-form"
      ],
      "inProgress": true

    },
    {
      "id": "explain_public_services_01",
      "name": "Explain My Document",
      "createdAt": "2025-07-06T00:00:00Z",
      "url": "https://github.com/SushantSriv/Forklar-llama",
      "description": "A Streamlit demo that leverages a local Llama 3 8B model (via Ollama) to simplify public-sector documents (PDF/DOCX). Supports multi-language explanations, PDF-to-text extraction with OCR fallback, parallel inference for fast responses, and performance optimizations for chunking and multithreading. As comparatively new in norway, I found typical, complex official documents very confusing,so I built this tool for myself and others who have wants a quick summary and just imp document stuff.",
      "isFork": false,
      "languages": [
        {
          "name": "Python 3.10+",
          "iconifyClass": "logos:python",
          "color": "#3776AB"
        },
        {
          "name": "Streamlit",
          "iconifyClass": "simple-icons:streamlit",
          "color": "#FF4B4B"
        },
        {
          "name": "Ollama",
          "iconifyClass": "simple-icons:ollama",
          "color": "#F0F0F0"
        },
        {
          "name": "python-dotenv",
          "iconifyClass": "simple-icons:dotenv",
          "color": "#000000"
        },
        {
          "name": "Docker",
          "iconifyClass": "simple-icons:docker",
          "color": "#2496ED"
        },
        {
          "name": "GitHub Actions",
          "iconifyClass": "simple-icons:githubactions",
          "color": "#2088FF"
        },
        {
          "name": "Azure Container Registry",
          "iconifyClass": "simple-icons:azuredevops",
          "color": "#0078D4"
        },
        {
          "name": "Custom Domain & TLS",
          "iconifyClass": "simple-icons:letsencrypt",
          "color": "#C99700"
        },
        {
          "name": "LoRA-finetuning",
          "iconifyClass": "simple-icons:pytorch",
          "color": "#EE4C2C"
        }
      ],
      "dataSources": [
        {
          "name": "NAV PDF documents",
          "imageSrc": "nav_logo.png"
        },
        {
          "name": "Norwegian Tax Administration PDFs",
          "imageSrc": "skatteetaten_logo.png"
        },
        {
          "name": "Housing Bank PDFs",
          "imageSrc": "husbanken_logo.png"
        }
      ],
      "demoUrl": "https://explain-public-services.streamlit.app",
      "inProgress": true,
      "technologies": [
        "pdfminer.six",
        "pytesseract",
        "Pillow",
        "WeasyPrint",
        "PyMuPDF",
        "stqdm"
      ]
    },

    {
      "id": "electric_10",
      "name": "Electricity Price Forecast",
      "createdAt": "2025-07-05T00:00:00Z",
      "url": "https://github.com/SushantSriv/Electricity-forecast",
      "description": "End-to-end pipeline for hourly electricity-price prediction in Norway (NO1 to NO5): from raw API calls to a live Streamlit dashboard with models trained on historical price and weather data.",
      "isFork": false,
      "languages": [
        {
          "name": "Jupyter Notebook",
          "iconifyClass": "simple-icons:jupyter",
          "color": "#F37626"
        },
        {
          "name": "Python",
          "iconifyClass": "logos:python",
          "color": "#3776AB"
        },
        {
          "name": "Streamlit",
          "iconifyClass": "simple-icons:streamlit",
          "color": "#FF4B4B"
        },
        {
          "name": "Pandas",
          "iconifyClass": "simple-icons:pandas",
          "color": "#150458"
        },
        {
          "name": "scikit-learn",
          "iconifyClass": "simple-icons:scikitlearn",
          "color": "#F7931E"
        },
        {
          "name": "NumPy",
          "iconifyClass": "simple-icons:numpy",
          "color": "#013243"
        },
        {
          "name": "Altair",
          "iconifyClass": "simple-icons:altair",
          "color": "#F5B13F"
        },
        {
          "name": "tqdm",
          "iconifyClass": "simple-icons:tqdm",
          "color": "#29D17E"
        }
      ],
      "dataSources": [
        {
          "name": "HvaKosterStrømmen API",
          "imageSrc": "hvakosterstrommen.png"
        },
        {
          "name": "Frost API",
          "imageSrc": "met_norway.png"
        }
      ],
      "demoUrl": "https://electricity-forecast-sushant.streamlit.app",
      "inProgress": true,
      "technologies": [
        "joblib",
        "streamlit-autorefresh",
        "vega_datasets",
        "requests"
      ]
    },

    {
      "id": "R_kgDOO7jbdg_1",
      "name": "Geo-Risk Prediction Dashboard",
      "createdAt": "2025-06-14T12:39:30Z",
      "url": "https://github.com/SushantSriv/Risikoprediksjon_for_Transport_og_Landbruk",
      "description": "Interactive dashboard that combines 34 years of Norwegian accident data with real-time MET Norway forecasts to predict road & farmland risk. Models (Random Forest) served through FastAPI, visualised with React + Leaflet, bundled in Docker.",
      "isFork": false,
      "languages": [
        {
          "name": "Python",
          "iconifyClass": "logos-python",
          "color": "#3776AB"
        },
        {
          "name": "Pandas",
          "iconifyClass": "simple-icons:pandas",
          "color": "#150458"
        },
        {
          "name": "GeoPandas",
          "iconifyClass": "simple-icons:geopandas",
          "color": "#29B7C9"
        },
        {
          "name": "FastAPI",
          "iconifyClass": "simple-icons:fastapi",
          "color": "#009688"
        },
        {
          "name": "React",
          "iconifyClass": "simple-icons:react",
          "color": "#61DAFB"
        },
        {
          "name": "Vite",
          "iconifyClass": "simple-icons:vite",
          "color": "#646CFF"
        },
        {
          "name": "Leaflet",
          "iconifyClass": "simple-icons:leaflet",
          "color": "#199900"
        },
        {
          "name": "Docker",
          "iconifyClass": "simple-icons:docker",
          "color": "#2496ED"
        }
      ],
      "dataSources": [
        {
          "name": "MET Norway API",
          "imageSrc": "met_norway.png"
        },
        {
          "name": "Statens vegvesen",
          "imageSrc": "vegvesen.png"
        },
        {
          "name": "OpenStreetMap",
          "imageSrc": "osm.png"
        }
      ],
      "demoUrl": "https://www.youtube.com/embed/lIDKO1tNgUs",
      "technologies": [
        "joblib",
        "react-leaflet",
        "axios"
      ]

    },

    {
      "id": "R_kgDObzB2KQ_2",
      "name": "Housing-Price Prediction API",
      "createdAt": "2024-01-28T10:12:03Z",
      "url": "https://github.com/SushantSriv/boligprediksjon-fastapi",
      "description": "End-to-end MLOps demo: Scikit-Learn Random-Forest model served via FastAPI, containerised with Docker and auto-deployed by GitHub Actions.",
      "isFork": false,
      "languages": [
        {
          "name": "Python",
          "iconifyClass": "logos:python",
          "color": "#3776AB"
        },
        {
          "name": "FastAPI",
          "iconifyClass": "simple-icons:fastapi",
          "color": "#009688"
        },
        {
          "name": "React",
          "iconifyClass": "simple-icons:react",
          "color": "#61DAFB"
        },
        {
          "name": "Docker",
          "iconifyClass": "simple-icons:docker",
          "color": "#2496ED"
        },
        {
          "name": "GitHub Actions",
          "iconifyClass": "simple-icons:githubactions",
          "color": "#2088FF"
        }
      ],
      "dataSources": [
        {
          "name": "StatBank",
          "imageSrc": "statbank.png"
        }
      ],
      "demoUrl": "https://www.youtube.com/embed/kSOjQf3MPO8",
      "technologies": [
        "uvicorn",
        "joblib",
        "requests",
        "react-dom",
        "react-scripts"
      ]
    },

    {
      "id": "R_kgDOc8nVFA_3",
      "name": "COVID-19 Data Lake on AWS",
      "createdAt": "2023-09-02T08:44:19Z",
      "url": "https://github.com/SushantSriv/COVID-19-Data-Pipeline-AWS-Python-Power-BI",
      "description": "Serverless ETL: AWS Glue crawls Johns-Hopkins CSVs into S3, queried via Athena, visualised in Power BI dashboards.",
      "isFork": false,
      "languages": [
        {
          "name": "PySpark",
          "iconifyClass": "simple-icons:apachespark",
          "color": "#E25A1C"
        },
        {
          "name": "Python",
          "iconifyClass": "logos:python",
          "color": "#3776AB"
        },
        {
          "name": "Pandas",
          "iconifyClass": "simple-icons:pandas",
          "color": "#150458"
        },
        {
          "name": "Boto3",
          "iconifyClass": "simple-icons:amazonaws",
          "color": "#FF9900"
        },
        {
          "name": "AWS S3",
          "iconifyClass": "simple-icons:amazonaws",
          "color": "#FF9900"
        },
        {
          "name": "AWS Glue",
          "iconifyClass": "simple-icons:amazonaws",
          "color": "#FF9900"
        },
        {
          "name": "AWS Athena",
          "iconifyClass": "simple-icons:amazonaws",
          "color": "#FF9900"
        },
        {
          "name": "Power BI",
          "iconifyClass": "simple-icons:powerbi",
          "color": "#F2C811"
        }
      ],
      "dataSources": [
        {
          "name": "Johns Hopkins CSSE",
          "imageSrc": "JohnsHopkins.png"
        },
        {
          "name": "Our World in Data",
          "imageSrc": "WorldData.png"
        }
      ],
      "demoImages": [
        "covid_project_1.png",
        "covid_project_2.png",
        "covid_project_3.png"
      ],
      "technologies": [
        "requests",
        "pyarrow"
      ]
    },

    {
      "id": "R_kgDOc8nVFA_4",
      "name": "Traffic Accident Data Analysis Norway",
      "createdAt": "2023-09-02T08:44:19Z",
      "url": "https://github.com/SushantSriv/TrafikkulykkeDataanalyse_Norge",
      "description": "Analysis of traffic accidents in Norway (1990 to 2024) using open data from Statens vegvesen. This project uncovers patterns in time, location, weather, gender, and road conditions to support better road safety measures.",
      "isFork": false,
      "languages": [
        {
          "name": "Python",
          "iconifyClass": "logos:python",
          "color": "#3776AB"
        },
        {
          "name": "pandas",
          "iconifyClass": "simple-icons:pandas",
          "color": "#150458"
        },
        {
          "name": "NumPy",
          "iconifyClass": "simple-icons:numpy",
          "color": "#013243"
        },
        {
          "name": "matplotlib",
          "iconifyClass": "simple-icons:matplotlib",
          "color": "#11557C"
        },
        {
          "name": "Jupyter Notebook",
          "iconifyClass": "simple-icons:jupyter",
          "color": "#F37626"
        }
      ],
      "dataSources": [
        {
          "name": "Statens vegvesen",
          "imageSrc": "vegvesen.png"
        }
      ],
      "demoPdfs": [
        "https://raw.githubusercontent.com/SushantSriv/TrafikkulykkeDataanalyse_Norge/main/notebooks/Ulykke_tidspunkt_analyse.pdf",
        "https://raw.githubusercontent.com/SushantSriv/TrafikkulykkeDataanalyse_Norge/main/notebooks/Ulykker_temp_analyse.pdf",
        "https://raw.githubusercontent.com/SushantSriv/TrafikkulykkeDataanalyse_Norge/main/notebooks/Ulykker_vaerforhold_analyse_full.pdf",
        "https://raw.githubusercontent.com/SushantSriv/TrafikkulykkeDataanalyse_Norge/main/notebooks/risikom%C3%B8nster_ulykker_rapport.pdf",
        "https://raw.githubusercontent.com/SushantSriv/TrafikkulykkeDataanalyse_Norge/main/notebooks/skade_plassering_analyse.pdf",
        "https://raw.githubusercontent.com/SushantSriv/TrafikkulykkeDataanalyse_Norge/main/notebooks/skadeanalyse_kommune_kj%C3%B8nn.pdf",
        "https://raw.githubusercontent.com/SushantSriv/TrafikkulykkeDataanalyse_Norge/main/notebooks/skadegrad_analyse_med_kode.pdf",
        "https://raw.githubusercontent.com/SushantSriv/TrafikkulykkeDataanalyse_Norge/main/notebooks/skader_kj%C3%B8nn_analyse.pdf",
        "https://raw.githubusercontent.com/SushantSriv/TrafikkulykkeDataanalyse_Norge/main/notebooks/skader_ukedagstype_analyse.pdf",
        "https://raw.githubusercontent.com/SushantSriv/TrafikkulykkeDataanalyse_Norge/main/notebooks/vegtilstand_skader.pdf"
      ],
      "technologies": [
        "seaborn",
        "plotly",
        "geopandas"
      ]

    },

    {
      "id": "R_kgDOc8nVFA_6",
      "name": "Power BI report on Injuries & Accidents",
      "createdAt": "2023-09-02T08:44:19Z",
      "url": "https://github.com/SushantSriv/Vegvesen_data_analyse_BI",
      "description": "Power BI report analyzing traffic injuries and accidents based on Statens vegvesen open CSV data (1990 to 2024).",
      "isFork": false,
      "languages": [
        {
          "name": "Power BI",
          "iconifyClass": "simple-icons:powerbi",
          "color": "#F2C811"
        },
        {
          "name": "DAX",
          "iconifyClass": "simple-icons:dax",
          "color": "#0078D4"
        },
        {
          "name": "M (Power Query)",
          "iconifyClass": "simple-icons:m",
          "color": "#C1272D"
        }
      ],
      "dataSources": [
        {
          "name": "Statens vegvesen",
          "imageSrc": "vegvesen.png"
        }
      ],
      "demoImages": [
        "bilde1.png",
        "bilde2.png",
        "bilde3.png",
        "bilde4.png",
        "bilde5.png"

      ],
      "technologies": [
        "seaborn",
        "gdown"
      ]
    },



    {
      "id": "semantic_image_captioning_11",
      "name": "Semantic Image Captioning Enhancements",
      "createdAt": "2024-01-12T00:00:00Z",
      "url": "https://github.com/SushantSriv/Semantic-Enhancements-in-Image-Captioning-Leveraging-Neural-Networks-to-Improve-BLIP-and-GPT-2",
      "description": "Master-thesis codebase that augments BLIP and GPT-2 for image captioning via “Weighted Summarization”. Includes notebooks for COCO & Flickr30k, evaluation scripts and result JSON-files.",
      "isFork": false,
      "languages": [
        {
          "name": "Python",
          "iconifyClass": "logos:python",
          "color": "#3776AB"
        },
        {
          "name": "PyTorch",
          "iconifyClass": "simple-icons:pytorch",
          "color": "#EE4C2C"
        },
        {
          "name": "Hugging Face",
          "iconifyClass": "simple-icons:huggingface",
          "color": "#FFBF00"
        },
        {
          "name": "OpenAI",
          "iconifyClass": "simple-icons:openai",
          "color": "#412991"
        },
        {
          "name": "Jupyter Notebook",
          "iconifyClass": "simple-icons:jupyter",
          "color": "#F37626"
        },
        {
          "name": "Matplotlib",
          "iconifyClass": "simple-icons:matplotlib",
          "color": "#11557C"
        },
        {
          "name": "NumPy",
          "iconifyClass": "simple-icons:numpy",
          "color": "#013243"
        },
        {
          "name": "Pandas",
          "iconifyClass": "simple-icons:pandas",
          "color": "#150458"
        },
        {
          "name": "scikit-learn",
          "iconifyClass": "simple-icons:scikitlearn",
          "color": "#F7931E"
        },
        {
          "name": "tqdm",
          "iconifyClass": "simple-icons:tqdm",
          "color": "#29D17E"
        }
      ],
      "dataSources": [
        {
          "name": "COCO Dataset",
          "imageSrc": "coco_logo.png"
        },
        {
          "name": "Flickr30k Dataset",
          "imageSrc": "flickr_logo.png"
        }

      ],
      "demoUrl": "",
      "technologies": [
        "evaluate",
        "huggingface-evaluate",
        "transformers",
        "language_tool_python",
        "Pillow",
        "scikit-image",
        "pycocotools",
        "pycocoevalcap",
        "torchvision"
      ]
    },


    {
      "id": "R_kgDOdk7Yhg_8",
      "name": "Text Summarizer (Thesis)",
      "createdAt": "2021-05-10T09:02:55Z",
      "url": "https://drive.google.com/file/d/1GvvxxNht4rp2MKw5ImC9OtXaLiz37W4C/view?usp=sharing",
      "description": "Bachelor thesis project: extractive summaries for news & research using TextRank and Gensim; evaluated with ROUGE metrics.",
      "isFork": false,
      "languages": [
        {
          "name": "Python",
          "iconifyClass": "logos:python"
        },
        {
          "name": "Gensim",
          "iconifyClass": "simple-icons:gensim",
          "color": "#FFCA0F"
        },
        {
          "name": "NLTK",
          "iconifyClass": "simple-icons:nltk",
          "color": "#3CB371"
        }
      ],
      "dataSources": [
        {
          "name": "BBC News Corpus",
          "iconifyClass": "simple-icons:bbc"
        }
      ],
      "demoUrl": "https://www.youtube.com/embed/2B3p0kF2xlE",
      "technologies": [
        "networkx",
        "summa",
        "rouge-score"
      ]
    },

    {
      "id": "R_kgDObR5ysg_7",
      "name": "EXE Files Auto-Remover",
      "createdAt": "2022-12-15T14:17:44Z",
      "url": "https://github.com/SushantSriv/exe-files-automatic-remover",
      "description": "Tiny desktop utility written in C# + PowerShell that scans engineering PCs and deletes obsolete binaries to free disk space.",
      "isFork": false,
      "languages": [
        {
          "name": "C#",
          "iconifyClass": "simple-icons:csharp",
          "color": "#239120"
        },
        {
          "name": "PowerShell",
          "iconifyClass": "simple-icons:powershell",
          "color": "#5391FE"
        }
      ],
      "dataSources": [],
      "demoUrl": "https://www.youtube.com/embed/v7V3Cz2a7Y4"
    }

  ]
}